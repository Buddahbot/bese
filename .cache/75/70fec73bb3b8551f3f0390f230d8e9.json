{"id":"logic.js","dependencies":[{"name":"/Users/anorak/Desktop/besedo2/front-end/package.json","includedInParent":true,"mtime":1660847051686},{"name":"./index.js","loc":{"line":1,"column":27,"index":27},"parent":"/Users/anorak/Desktop/besedo2/front-end/logic.js","resolved":"/Users/anorak/Desktop/besedo2/front-end/index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createPopup = createPopup;\nexports.makeUpdate = makeUpdate;\nexports.remove = remove;\nexports.removePopupHandler = removePopupHandler;\n\nvar _index = require(\"./index.js\");\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction createPopup(customer_id, item) {\n  if (!customer_id) return;\n  var html = \"<div class=\\\"popup-body\\\" id=\\\"popup-\".concat(customer_id, \"\\\">\\n    <div>\\n      <button name=\\\"cancel-\").concat(customer_id, \"\\\">X</button>\\n    </div>\\n    <div>\\n      <label>\\n        Name\\n        <input type=\\\"text\\\" id=\\\"name-\").concat(customer_id, \"\\\" value=\\\"\").concat(item.name, \"\\\" />\\n      </label>\\n    </div>\\n    <div>\\n      <label>\\n        Email\\n        <input type=\\\"text\\\" id=\\\"email-\").concat(customer_id, \"\\\" value=\\\"\").concat(item.email, \"\\\" />\\n      </label>\\n    </div>\\n    <div>\\n      <label>\\n        Town\\n        <input type=\\\"text\\\" id=\\\"town-\").concat(customer_id, \"\\\" value=\\\"\").concat(item.town, \"\\\" />\\n      </label>\\n    </div>\\n    <div>\\n      <label>\\n        Country\\n        <input type=\\\"text\\\" id=\\\"country-\").concat(customer_id, \"\\\" value=\\\"\").concat(item.country, \"\\\" />\\n      </label>\\n    </div>\\n\\n    <div>\\n      <button name=\\\"cancel-\").concat(customer_id, \"\\\">Cancel</button>\\n      <button id=\\\"update-customer-\").concat(customer_id, \"\\\">Update</button>\\n    </div>\\n    </div>\");\n  var popupHolder = document.createElement(\"div\");\n  popupHolder.innerHTML = html;\n  document.body.appendChild(popupHolder);\n  document.getElementsByName(\"cancel-\" + customer_id).forEach(function (elem) {\n    elem.addEventListener(\"click\", function (event) {\n      remove(customer_id);\n    });\n  });\n  document.body.appendChild(popupHolder);\n  document.querySelector(\"#update-customer-\" + customer_id).addEventListener(\"click\", /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(event) {\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return makeUpdate(customer_id);\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  window.addEventListener(\"click\", removePopupHandler, {\n    capture: true\n  });\n}\n\nfunction makeUpdate(_x2) {\n  return _makeUpdate.apply(this, arguments);\n}\n\nfunction _makeUpdate() {\n  _makeUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(id) {\n    var customer, response;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            customer = {\n              customer_id: id,\n              name: document.querySelector(\"#name-\" + id).value,\n              email: document.querySelector(\"#email-\" + id).value,\n              town: document.querySelector(\"#town-\" + id).value,\n              country: document.querySelector(\"#country-\" + id).value\n            };\n            _context2.next = 3;\n            return (0, _index.updateUser)(customer);\n\n          case 3:\n            response = _context2.sent;\n            console.log(response.data);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _makeUpdate.apply(this, arguments);\n}\n\nfunction remove(id) {\n  document.querySelector(\"#popup-\" + id).remove();\n  window.removeEventListener(\"click\", removePopupHandler);\n}\n\nfunction removePopupHandler(event) {\n  console.log(\"Window clicked\");\n  var currentPopup = document.querySelector(\".popup-body\");\n\n  if (currentPopup) {\n    if (!currentPopup.contains(event.target)) {\n      var id = currentPopup.id.split(\"-\")[1];\n      remove(id);\n    }\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":11,"column":0},"source":"logic.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":47},"source":"logic.js","original":{"line":2,"column":0}},{"generated":{"line":21,"column":0},"source":"logic.js","original":{"line":3,"column":7}},{"generated":{"line":21,"column":9},"source":"logic.js","original":{"line":3,"column":16},"name":"createPopup"},{"generated":{"line":21,"column":20},"source":"logic.js","original":{"line":3,"column":7}},{"generated":{"line":21,"column":21},"source":"logic.js","original":{"line":3,"column":28},"name":"customer_id"},{"generated":{"line":21,"column":32},"source":"logic.js","original":{"line":3,"column":7}},{"generated":{"line":21,"column":34},"source":"logic.js","original":{"line":3,"column":41},"name":"item"},{"generated":{"line":21,"column":38},"source":"logic.js","original":{"line":3,"column":7}},{"generated":{"line":21,"column":40},"source":"logic.js","original":{"line":3,"column":47}},{"generated":{"line":22,"column":2},"source":"logic.js","original":{"line":4,"column":2}},{"generated":{"line":22,"column":6},"source":"logic.js","original":{"line":4,"column":6}},{"generated":{"line":22,"column":7},"source":"logic.js","original":{"line":4,"column":7},"name":"customer_id"},{"generated":{"line":22,"column":18},"source":"logic.js","original":{"line":4,"column":2}},{"generated":{"line":22,"column":20},"source":"logic.js","original":{"line":4,"column":20}},{"generated":{"line":23,"column":2},"source":"logic.js","original":{"line":5,"column":2}},{"generated":{"line":23,"column":6},"source":"logic.js","original":{"line":5,"column":6},"name":"html"},{"generated":{"line":23,"column":10},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":60},"source":"logic.js","original":{"line":5,"column":50},"name":"customer_id"},{"generated":{"line":23,"column":71},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":128},"source":"logic.js","original":{"line":7,"column":29},"name":"customer_id"},{"generated":{"line":23,"column":139},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":258},"source":"logic.js","original":{"line":12,"column":38},"name":"customer_id"},{"generated":{"line":23,"column":269},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":293},"source":"logic.js","original":{"line":12,"column":61},"name":"item"},{"generated":{"line":23,"column":297},"source":"logic.js","original":{"line":12,"column":65}},{"generated":{"line":23,"column":298},"source":"logic.js","original":{"line":12,"column":66},"name":"name"},{"generated":{"line":23,"column":302},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":431},"source":"logic.js","original":{"line":18,"column":39},"name":"customer_id"},{"generated":{"line":23,"column":442},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":466},"source":"logic.js","original":{"line":18,"column":62},"name":"item"},{"generated":{"line":23,"column":470},"source":"logic.js","original":{"line":18,"column":66}},{"generated":{"line":23,"column":471},"source":"logic.js","original":{"line":18,"column":67},"name":"email"},{"generated":{"line":23,"column":476},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":603},"source":"logic.js","original":{"line":24,"column":38},"name":"customer_id"},{"generated":{"line":23,"column":614},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":638},"source":"logic.js","original":{"line":24,"column":61},"name":"item"},{"generated":{"line":23,"column":642},"source":"logic.js","original":{"line":24,"column":65}},{"generated":{"line":23,"column":643},"source":"logic.js","original":{"line":24,"column":66},"name":"town"},{"generated":{"line":23,"column":647},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":780},"source":"logic.js","original":{"line":30,"column":41},"name":"customer_id"},{"generated":{"line":23,"column":791},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":815},"source":"logic.js","original":{"line":30,"column":64},"name":"item"},{"generated":{"line":23,"column":819},"source":"logic.js","original":{"line":30,"column":68}},{"generated":{"line":23,"column":820},"source":"logic.js","original":{"line":30,"column":69},"name":"country"},{"generated":{"line":23,"column":827},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":916},"source":"logic.js","original":{"line":35,"column":29},"name":"customer_id"},{"generated":{"line":23,"column":927},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":995},"source":"logic.js","original":{"line":36,"column":36},"name":"customer_id"},{"generated":{"line":23,"column":1006},"source":"logic.js","original":{"line":5,"column":10}},{"generated":{"line":23,"column":1053},"source":"logic.js","original":{"line":5,"column":2}},{"generated":{"line":24,"column":2},"source":"logic.js","original":{"line":39,"column":2}},{"generated":{"line":24,"column":6},"source":"logic.js","original":{"line":39,"column":6},"name":"popupHolder"},{"generated":{"line":24,"column":17},"source":"logic.js","original":{"line":39,"column":17}},{"generated":{"line":24,"column":20},"source":"logic.js","original":{"line":39,"column":20},"name":"document"},{"generated":{"line":24,"column":28},"source":"logic.js","original":{"line":39,"column":28}},{"generated":{"line":24,"column":29},"source":"logic.js","original":{"line":39,"column":29},"name":"createElement"},{"generated":{"line":24,"column":42},"source":"logic.js","original":{"line":39,"column":20}},{"generated":{"line":24,"column":43},"source":"logic.js","original":{"line":39,"column":43}},{"generated":{"line":24,"column":48},"source":"logic.js","original":{"line":39,"column":20}},{"generated":{"line":24,"column":49},"source":"logic.js","original":{"line":39,"column":2}},{"generated":{"line":25,"column":2},"source":"logic.js","original":{"line":40,"column":2},"name":"popupHolder"},{"generated":{"line":25,"column":13},"source":"logic.js","original":{"line":40,"column":13}},{"generated":{"line":25,"column":14},"source":"logic.js","original":{"line":40,"column":14},"name":"innerHTML"},{"generated":{"line":25,"column":23},"source":"logic.js","original":{"line":40,"column":2}},{"generated":{"line":25,"column":26},"source":"logic.js","original":{"line":40,"column":26},"name":"html"},{"generated":{"line":25,"column":30},"source":"logic.js","original":{"line":40,"column":2}},{"generated":{"line":26,"column":2},"source":"logic.js","original":{"line":42,"column":2},"name":"document"},{"generated":{"line":26,"column":10},"source":"logic.js","original":{"line":42,"column":10}},{"generated":{"line":26,"column":11},"source":"logic.js","original":{"line":42,"column":11},"name":"body"},{"generated":{"line":26,"column":15},"source":"logic.js","original":{"line":42,"column":2}},{"generated":{"line":26,"column":16},"source":"logic.js","original":{"line":42,"column":16},"name":"appendChild"},{"generated":{"line":26,"column":27},"source":"logic.js","original":{"line":42,"column":2}},{"generated":{"line":26,"column":28},"source":"logic.js","original":{"line":42,"column":28},"name":"popupHolder"},{"generated":{"line":26,"column":39},"source":"logic.js","original":{"line":42,"column":2}},{"generated":{"line":27,"column":2},"source":"logic.js","original":{"line":43,"column":2},"name":"document"},{"generated":{"line":27,"column":10},"source":"logic.js","original":{"line":43,"column":10}},{"generated":{"line":27,"column":11},"source":"logic.js","original":{"line":43,"column":11},"name":"getElementsByName"},{"generated":{"line":27,"column":28},"source":"logic.js","original":{"line":43,"column":2}},{"generated":{"line":27,"column":29},"source":"logic.js","original":{"line":43,"column":29}},{"generated":{"line":27,"column":41},"source":"logic.js","original":{"line":43,"column":41},"name":"customer_id"},{"generated":{"line":27,"column":52},"source":"logic.js","original":{"line":43,"column":2}},{"generated":{"line":27,"column":54},"source":"logic.js","original":{"line":43,"column":54},"name":"forEach"},{"generated":{"line":27,"column":61},"source":"logic.js","original":{"line":43,"column":2}},{"generated":{"line":27,"column":62},"source":"logic.js","original":{"line":43,"column":62}},{"generated":{"line":27,"column":72},"source":"logic.js","original":{"line":43,"column":63},"name":"elem"},{"generated":{"line":27,"column":76},"source":"logic.js","original":{"line":43,"column":62}},{"generated":{"line":27,"column":78},"source":"logic.js","original":{"line":43,"column":72}},{"generated":{"line":28,"column":4},"source":"logic.js","original":{"line":44,"column":4},"name":"elem"},{"generated":{"line":28,"column":8},"source":"logic.js","original":{"line":44,"column":8}},{"generated":{"line":28,"column":9},"source":"logic.js","original":{"line":44,"column":9},"name":"addEventListener"},{"generated":{"line":28,"column":25},"source":"logic.js","original":{"line":44,"column":4}},{"generated":{"line":28,"column":26},"source":"logic.js","original":{"line":44,"column":26}},{"generated":{"line":28,"column":33},"source":"logic.js","original":{"line":44,"column":4}},{"generated":{"line":28,"column":35},"source":"logic.js","original":{"line":44,"column":35}},{"generated":{"line":28,"column":45},"source":"logic.js","original":{"line":44,"column":36},"name":"event"},{"generated":{"line":28,"column":50},"source":"logic.js","original":{"line":44,"column":35}},{"generated":{"line":28,"column":52},"source":"logic.js","original":{"line":44,"column":46}},{"generated":{"line":29,"column":6},"source":"logic.js","original":{"line":45,"column":6},"name":"remove"},{"generated":{"line":29,"column":12},"source":"logic.js","original":{"line":45,"column":12}},{"generated":{"line":29,"column":13},"source":"logic.js","original":{"line":45,"column":13},"name":"customer_id"},{"generated":{"line":29,"column":24},"source":"logic.js","original":{"line":45,"column":12}},{"generated":{"line":29,"column":25},"source":"logic.js","original":{"line":45,"column":6}},{"generated":{"line":30,"column":4},"source":"logic.js","original":{"line":46,"column":5}},{"generated":{"line":30,"column":5},"source":"logic.js","original":{"line":44,"column":4}},{"generated":{"line":31,"column":2},"source":"logic.js","original":{"line":47,"column":3}},{"generated":{"line":31,"column":3},"source":"logic.js","original":{"line":43,"column":2}},{"generated":{"line":32,"column":2},"source":"logic.js","original":{"line":49,"column":2},"name":"document"},{"generated":{"line":32,"column":10},"source":"logic.js","original":{"line":49,"column":10}},{"generated":{"line":32,"column":11},"source":"logic.js","original":{"line":49,"column":11},"name":"body"},{"generated":{"line":32,"column":15},"source":"logic.js","original":{"line":49,"column":2}},{"generated":{"line":32,"column":16},"source":"logic.js","original":{"line":49,"column":16},"name":"appendChild"},{"generated":{"line":32,"column":27},"source":"logic.js","original":{"line":49,"column":2}},{"generated":{"line":32,"column":28},"source":"logic.js","original":{"line":49,"column":28},"name":"popupHolder"},{"generated":{"line":32,"column":39},"source":"logic.js","original":{"line":49,"column":2}},{"generated":{"line":33,"column":2},"source":"logic.js","original":{"line":50,"column":2},"name":"document"},{"generated":{"line":33,"column":10},"source":"logic.js","original":{"line":50,"column":10}},{"generated":{"line":33,"column":11},"source":"logic.js","original":{"line":51,"column":5},"name":"querySelector"},{"generated":{"line":33,"column":24},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":33,"column":25},"source":"logic.js","original":{"line":51,"column":19}},{"generated":{"line":33,"column":47},"source":"logic.js","original":{"line":51,"column":41},"name":"customer_id"},{"generated":{"line":33,"column":58},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":33,"column":60},"source":"logic.js","original":{"line":52,"column":5},"name":"addEventListener"},{"generated":{"line":33,"column":76},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":33,"column":77},"source":"logic.js","original":{"line":52,"column":22}},{"generated":{"line":33,"column":84},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":34,"column":4},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":34,"column":74},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":34,"column":91},"source":"logic.js","original":{"line":52,"column":38},"name":"event"},{"generated":{"line":34,"column":96},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":35,"column":6},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":36,"column":8},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":37,"column":10},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":38,"column":12},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":39,"column":14},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":40,"column":14},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":40,"column":21},"source":"logic.js","original":{"line":53,"column":12},"name":"makeUpdate"},{"generated":{"line":40,"column":31},"source":"logic.js","original":{"line":53,"column":22}},{"generated":{"line":40,"column":32},"source":"logic.js","original":{"line":53,"column":23},"name":"customer_id"},{"generated":{"line":40,"column":43},"source":"logic.js","original":{"line":53,"column":22}},{"generated":{"line":40,"column":44},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":42,"column":12},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":43,"column":12},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":44,"column":14},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":45,"column":10},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":46,"column":8},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":47,"column":6},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":48,"column":4},"source":"logic.js","original":{"line":52,"column":31}},{"generated":{"line":48,"column":5},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":50,"column":4},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":51,"column":6},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":52,"column":4},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":53,"column":2},"source":"logic.js","original":{"line":50,"column":2}},{"generated":{"line":54,"column":2},"source":"logic.js","original":{"line":56,"column":2},"name":"window"},{"generated":{"line":54,"column":8},"source":"logic.js","original":{"line":56,"column":8}},{"generated":{"line":54,"column":9},"source":"logic.js","original":{"line":56,"column":9},"name":"addEventListener"},{"generated":{"line":54,"column":25},"source":"logic.js","original":{"line":56,"column":2}},{"generated":{"line":54,"column":26},"source":"logic.js","original":{"line":56,"column":26}},{"generated":{"line":54,"column":33},"source":"logic.js","original":{"line":56,"column":2}},{"generated":{"line":54,"column":35},"source":"logic.js","original":{"line":56,"column":35},"name":"removePopupHandler"},{"generated":{"line":54,"column":53},"source":"logic.js","original":{"line":56,"column":2}},{"generated":{"line":54,"column":55},"source":"logic.js","original":{"line":56,"column":55}},{"generated":{"line":55,"column":4},"source":"logic.js","original":{"line":56,"column":57},"name":"capture"},{"generated":{"line":55,"column":11},"source":"logic.js","original":{"line":56,"column":64}},{"generated":{"line":55,"column":13},"source":"logic.js","original":{"line":56,"column":66}},{"generated":{"line":56,"column":2},"source":"logic.js","original":{"line":56,"column":55}},{"generated":{"line":56,"column":3},"source":"logic.js","original":{"line":56,"column":2}},{"generated":{"line":57,"column":0},"source":"logic.js","original":{"line":57,"column":1}},{"generated":{"line":59,"column":9},"source":"logic.js","original":{"line":59,"column":22},"name":"makeUpdate"},{"generated":{"line":64,"column":75},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":64,"column":93},"source":"logic.js","original":{"line":59,"column":33},"name":"id"},{"generated":{"line":64,"column":95},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":65,"column":4},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":66,"column":4},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":67,"column":6},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":68,"column":8},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":69,"column":10},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":70,"column":12},"source":"logic.js","original":{"line":60,"column":6},"name":"customer"},{"generated":{"line":70,"column":20},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":70,"column":23},"source":"logic.js","original":{"line":60,"column":17}},{"generated":{"line":71,"column":14},"source":"logic.js","original":{"line":61,"column":4},"name":"customer_id"},{"generated":{"line":71,"column":25},"source":"logic.js","original":{"line":61,"column":15}},{"generated":{"line":71,"column":27},"source":"logic.js","original":{"line":61,"column":17},"name":"id"},{"generated":{"line":71,"column":29},"source":"logic.js","original":{"line":60,"column":17}},{"generated":{"line":72,"column":14},"source":"logic.js","original":{"line":62,"column":4},"name":"name"},{"generated":{"line":72,"column":18},"source":"logic.js","original":{"line":62,"column":8}},{"generated":{"line":72,"column":20},"source":"logic.js","original":{"line":62,"column":10},"name":"document"},{"generated":{"line":72,"column":28},"source":"logic.js","original":{"line":62,"column":18}},{"generated":{"line":72,"column":29},"source":"logic.js","original":{"line":62,"column":19},"name":"querySelector"},{"generated":{"line":72,"column":42},"source":"logic.js","original":{"line":62,"column":10}},{"generated":{"line":72,"column":43},"source":"logic.js","original":{"line":62,"column":33}},{"generated":{"line":72,"column":54},"source":"logic.js","original":{"line":62,"column":44},"name":"id"},{"generated":{"line":72,"column":56},"source":"logic.js","original":{"line":62,"column":10}},{"generated":{"line":72,"column":58},"source":"logic.js","original":{"line":62,"column":48},"name":"value"},{"generated":{"line":72,"column":63},"source":"logic.js","original":{"line":60,"column":17}},{"generated":{"line":73,"column":14},"source":"logic.js","original":{"line":63,"column":4},"name":"email"},{"generated":{"line":73,"column":19},"source":"logic.js","original":{"line":63,"column":9}},{"generated":{"line":73,"column":21},"source":"logic.js","original":{"line":63,"column":11},"name":"document"},{"generated":{"line":73,"column":29},"source":"logic.js","original":{"line":63,"column":19}},{"generated":{"line":73,"column":30},"source":"logic.js","original":{"line":63,"column":20},"name":"querySelector"},{"generated":{"line":73,"column":43},"source":"logic.js","original":{"line":63,"column":11}},{"generated":{"line":73,"column":44},"source":"logic.js","original":{"line":63,"column":34}},{"generated":{"line":73,"column":56},"source":"logic.js","original":{"line":63,"column":46},"name":"id"},{"generated":{"line":73,"column":58},"source":"logic.js","original":{"line":63,"column":11}},{"generated":{"line":73,"column":60},"source":"logic.js","original":{"line":63,"column":50},"name":"value"},{"generated":{"line":73,"column":65},"source":"logic.js","original":{"line":60,"column":17}},{"generated":{"line":74,"column":14},"source":"logic.js","original":{"line":64,"column":4},"name":"town"},{"generated":{"line":74,"column":18},"source":"logic.js","original":{"line":64,"column":8}},{"generated":{"line":74,"column":20},"source":"logic.js","original":{"line":64,"column":10},"name":"document"},{"generated":{"line":74,"column":28},"source":"logic.js","original":{"line":64,"column":18}},{"generated":{"line":74,"column":29},"source":"logic.js","original":{"line":64,"column":19},"name":"querySelector"},{"generated":{"line":74,"column":42},"source":"logic.js","original":{"line":64,"column":10}},{"generated":{"line":74,"column":43},"source":"logic.js","original":{"line":64,"column":33}},{"generated":{"line":74,"column":54},"source":"logic.js","original":{"line":64,"column":44},"name":"id"},{"generated":{"line":74,"column":56},"source":"logic.js","original":{"line":64,"column":10}},{"generated":{"line":74,"column":58},"source":"logic.js","original":{"line":64,"column":48},"name":"value"},{"generated":{"line":74,"column":63},"source":"logic.js","original":{"line":60,"column":17}},{"generated":{"line":75,"column":14},"source":"logic.js","original":{"line":65,"column":4},"name":"country"},{"generated":{"line":75,"column":21},"source":"logic.js","original":{"line":65,"column":11}},{"generated":{"line":75,"column":23},"source":"logic.js","original":{"line":65,"column":13},"name":"document"},{"generated":{"line":75,"column":31},"source":"logic.js","original":{"line":65,"column":21}},{"generated":{"line":75,"column":32},"source":"logic.js","original":{"line":65,"column":22},"name":"querySelector"},{"generated":{"line":75,"column":45},"source":"logic.js","original":{"line":65,"column":13}},{"generated":{"line":75,"column":46},"source":"logic.js","original":{"line":65,"column":36}},{"generated":{"line":75,"column":60},"source":"logic.js","original":{"line":65,"column":50},"name":"id"},{"generated":{"line":75,"column":62},"source":"logic.js","original":{"line":65,"column":13}},{"generated":{"line":75,"column":64},"source":"logic.js","original":{"line":65,"column":54},"name":"value"},{"generated":{"line":76,"column":12},"source":"logic.js","original":{"line":60,"column":17}},{"generated":{"line":76,"column":13},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":77,"column":12},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":78,"column":12},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":78,"column":19},"source":"logic.js","original":{"line":68,"column":23}},{"generated":{"line":78,"column":23},"source":"logic.js","original":{"line":68,"column":23},"name":"updateUser"},{"generated":{"line":78,"column":40},"source":"logic.js","original":{"line":68,"column":23}},{"generated":{"line":78,"column":42},"source":"logic.js","original":{"line":68,"column":34},"name":"customer"},{"generated":{"line":78,"column":50},"source":"logic.js","original":{"line":68,"column":23}},{"generated":{"line":78,"column":51},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":80,"column":10},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":81,"column":12},"source":"logic.js","original":{"line":68,"column":6},"name":"response"},{"generated":{"line":81,"column":20},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":82,"column":12},"source":"logic.js","original":{"line":69,"column":2},"name":"console"},{"generated":{"line":82,"column":19},"source":"logic.js","original":{"line":69,"column":9}},{"generated":{"line":82,"column":20},"source":"logic.js","original":{"line":69,"column":10},"name":"log"},{"generated":{"line":82,"column":23},"source":"logic.js","original":{"line":69,"column":2}},{"generated":{"line":82,"column":24},"source":"logic.js","original":{"line":69,"column":14},"name":"response"},{"generated":{"line":82,"column":32},"source":"logic.js","original":{"line":69,"column":22}},{"generated":{"line":82,"column":33},"source":"logic.js","original":{"line":69,"column":23},"name":"data"},{"generated":{"line":82,"column":37},"source":"logic.js","original":{"line":69,"column":2}},{"generated":{"line":84,"column":10},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":85,"column":10},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":86,"column":12},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":87,"column":8},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":88,"column":6},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":89,"column":4},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":90,"column":2},"source":"logic.js","original":{"line":59,"column":7}},{"generated":{"line":94,"column":0},"source":"logic.js","original":{"line":72,"column":7}},{"generated":{"line":94,"column":9},"source":"logic.js","original":{"line":72,"column":16},"name":"remove"},{"generated":{"line":94,"column":15},"source":"logic.js","original":{"line":72,"column":7}},{"generated":{"line":94,"column":16},"source":"logic.js","original":{"line":72,"column":23},"name":"id"},{"generated":{"line":94,"column":18},"source":"logic.js","original":{"line":72,"column":7}},{"generated":{"line":94,"column":20},"source":"logic.js","original":{"line":72,"column":27}},{"generated":{"line":95,"column":2},"source":"logic.js","original":{"line":73,"column":2},"name":"document"},{"generated":{"line":95,"column":10},"source":"logic.js","original":{"line":73,"column":10}},{"generated":{"line":95,"column":11},"source":"logic.js","original":{"line":73,"column":11},"name":"querySelector"},{"generated":{"line":95,"column":24},"source":"logic.js","original":{"line":73,"column":2}},{"generated":{"line":95,"column":25},"source":"logic.js","original":{"line":73,"column":25}},{"generated":{"line":95,"column":37},"source":"logic.js","original":{"line":73,"column":37},"name":"id"},{"generated":{"line":95,"column":39},"source":"logic.js","original":{"line":73,"column":2}},{"generated":{"line":95,"column":41},"source":"logic.js","original":{"line":73,"column":41},"name":"remove"},{"generated":{"line":95,"column":47},"source":"logic.js","original":{"line":73,"column":2}},{"generated":{"line":96,"column":2},"source":"logic.js","original":{"line":74,"column":2},"name":"window"},{"generated":{"line":96,"column":8},"source":"logic.js","original":{"line":74,"column":8}},{"generated":{"line":96,"column":9},"source":"logic.js","original":{"line":74,"column":9},"name":"removeEventListener"},{"generated":{"line":96,"column":28},"source":"logic.js","original":{"line":74,"column":2}},{"generated":{"line":96,"column":29},"source":"logic.js","original":{"line":74,"column":29}},{"generated":{"line":96,"column":36},"source":"logic.js","original":{"line":74,"column":2}},{"generated":{"line":96,"column":38},"source":"logic.js","original":{"line":74,"column":38},"name":"removePopupHandler"},{"generated":{"line":96,"column":56},"source":"logic.js","original":{"line":74,"column":2}},{"generated":{"line":97,"column":0},"source":"logic.js","original":{"line":75,"column":1}},{"generated":{"line":99,"column":0},"source":"logic.js","original":{"line":77,"column":7}},{"generated":{"line":99,"column":9},"source":"logic.js","original":{"line":77,"column":16},"name":"removePopupHandler"},{"generated":{"line":99,"column":27},"source":"logic.js","original":{"line":77,"column":7}},{"generated":{"line":99,"column":28},"source":"logic.js","original":{"line":77,"column":35},"name":"event"},{"generated":{"line":99,"column":33},"source":"logic.js","original":{"line":77,"column":7}},{"generated":{"line":99,"column":35},"source":"logic.js","original":{"line":77,"column":42}},{"generated":{"line":100,"column":2},"source":"logic.js","original":{"line":78,"column":2},"name":"console"},{"generated":{"line":100,"column":9},"source":"logic.js","original":{"line":78,"column":9}},{"generated":{"line":100,"column":10},"source":"logic.js","original":{"line":78,"column":10},"name":"log"},{"generated":{"line":100,"column":13},"source":"logic.js","original":{"line":78,"column":2}},{"generated":{"line":100,"column":14},"source":"logic.js","original":{"line":78,"column":14}},{"generated":{"line":100,"column":30},"source":"logic.js","original":{"line":78,"column":2}},{"generated":{"line":101,"column":2},"source":"logic.js","original":{"line":79,"column":2}},{"generated":{"line":101,"column":6},"source":"logic.js","original":{"line":79,"column":6},"name":"currentPopup"},{"generated":{"line":101,"column":18},"source":"logic.js","original":{"line":79,"column":18}},{"generated":{"line":101,"column":21},"source":"logic.js","original":{"line":79,"column":21},"name":"document"},{"generated":{"line":101,"column":29},"source":"logic.js","original":{"line":79,"column":29}},{"generated":{"line":101,"column":30},"source":"logic.js","original":{"line":79,"column":30},"name":"querySelector"},{"generated":{"line":101,"column":43},"source":"logic.js","original":{"line":79,"column":21}},{"generated":{"line":101,"column":44},"source":"logic.js","original":{"line":79,"column":44}},{"generated":{"line":101,"column":57},"source":"logic.js","original":{"line":79,"column":21}},{"generated":{"line":101,"column":58},"source":"logic.js","original":{"line":79,"column":2}},{"generated":{"line":103,"column":2},"source":"logic.js","original":{"line":80,"column":2}},{"generated":{"line":103,"column":6},"source":"logic.js","original":{"line":80,"column":6},"name":"currentPopup"},{"generated":{"line":103,"column":18},"source":"logic.js","original":{"line":80,"column":2}},{"generated":{"line":103,"column":20},"source":"logic.js","original":{"line":80,"column":20}},{"generated":{"line":104,"column":4},"source":"logic.js","original":{"line":81,"column":4}},{"generated":{"line":104,"column":8},"source":"logic.js","original":{"line":81,"column":8}},{"generated":{"line":104,"column":9},"source":"logic.js","original":{"line":81,"column":9},"name":"currentPopup"},{"generated":{"line":104,"column":21},"source":"logic.js","original":{"line":81,"column":21}},{"generated":{"line":104,"column":22},"source":"logic.js","original":{"line":81,"column":22},"name":"contains"},{"generated":{"line":104,"column":30},"source":"logic.js","original":{"line":81,"column":9}},{"generated":{"line":104,"column":31},"source":"logic.js","original":{"line":81,"column":31},"name":"event"},{"generated":{"line":104,"column":36},"source":"logic.js","original":{"line":81,"column":36}},{"generated":{"line":104,"column":37},"source":"logic.js","original":{"line":81,"column":37},"name":"target"},{"generated":{"line":104,"column":43},"source":"logic.js","original":{"line":81,"column":9}},{"generated":{"line":104,"column":44},"source":"logic.js","original":{"line":81,"column":4}},{"generated":{"line":104,"column":46},"source":"logic.js","original":{"line":81,"column":46}},{"generated":{"line":105,"column":6},"source":"logic.js","original":{"line":82,"column":6}},{"generated":{"line":105,"column":10},"source":"logic.js","original":{"line":82,"column":10},"name":"id"},{"generated":{"line":105,"column":12},"source":"logic.js","original":{"line":82,"column":12}},{"generated":{"line":105,"column":15},"source":"logic.js","original":{"line":82,"column":15},"name":"currentPopup"},{"generated":{"line":105,"column":27},"source":"logic.js","original":{"line":82,"column":27}},{"generated":{"line":105,"column":28},"source":"logic.js","original":{"line":82,"column":28},"name":"id"},{"generated":{"line":105,"column":30},"source":"logic.js","original":{"line":82,"column":15}},{"generated":{"line":105,"column":31},"source":"logic.js","original":{"line":82,"column":31},"name":"split"},{"generated":{"line":105,"column":36},"source":"logic.js","original":{"line":82,"column":15}},{"generated":{"line":105,"column":37},"source":"logic.js","original":{"line":82,"column":37}},{"generated":{"line":105,"column":40},"source":"logic.js","original":{"line":82,"column":15}},{"generated":{"line":105,"column":42},"source":"logic.js","original":{"line":82,"column":42}},{"generated":{"line":105,"column":43},"source":"logic.js","original":{"line":82,"column":15}},{"generated":{"line":105,"column":44},"source":"logic.js","original":{"line":82,"column":6}},{"generated":{"line":106,"column":6},"source":"logic.js","original":{"line":83,"column":6},"name":"remove"},{"generated":{"line":106,"column":12},"source":"logic.js","original":{"line":83,"column":12}},{"generated":{"line":106,"column":13},"source":"logic.js","original":{"line":83,"column":13},"name":"id"},{"generated":{"line":106,"column":15},"source":"logic.js","original":{"line":83,"column":12}},{"generated":{"line":106,"column":16},"source":"logic.js","original":{"line":83,"column":6}},{"generated":{"line":107,"column":4},"source":"logic.js","original":{"line":84,"column":5}},{"generated":{"line":108,"column":2},"source":"logic.js","original":{"line":85,"column":3}},{"generated":{"line":109,"column":0},"source":"logic.js","original":{"line":86,"column":1}}],"sources":{"logic.js":"import { updateUser } from \"./index.js\";\n\nexport function createPopup(customer_id, item) {\n  if (!customer_id) return;\n  let html = `<div class=\"popup-body\" id=\"popup-${customer_id}\">\n    <div>\n      <button name=\"cancel-${customer_id}\">X</button>\n    </div>\n    <div>\n      <label>\n        Name\n        <input type=\"text\" id=\"name-${customer_id}\" value=\"${item.name}\" />\n      </label>\n    </div>\n    <div>\n      <label>\n        Email\n        <input type=\"text\" id=\"email-${customer_id}\" value=\"${item.email}\" />\n      </label>\n    </div>\n    <div>\n      <label>\n        Town\n        <input type=\"text\" id=\"town-${customer_id}\" value=\"${item.town}\" />\n      </label>\n    </div>\n    <div>\n      <label>\n        Country\n        <input type=\"text\" id=\"country-${customer_id}\" value=\"${item.country}\" />\n      </label>\n    </div>\n\n    <div>\n      <button name=\"cancel-${customer_id}\">Cancel</button>\n      <button id=\"update-customer-${customer_id}\">Update</button>\n    </div>\n    </div>`;\n  let popupHolder = document.createElement(\"div\");\n  popupHolder.innerHTML = html;\n\n  document.body.appendChild(popupHolder);\n  document.getElementsByName(\"cancel-\" + customer_id).forEach((elem) => {\n    elem.addEventListener(\"click\", (event) => {\n      remove(customer_id);\n    });\n  });\n\n  document.body.appendChild(popupHolder);\n  document\n    .querySelector(\"#update-customer-\" + customer_id)\n    .addEventListener(\"click\", async (event) => {\n      await makeUpdate(customer_id);\n    });\n\n  window.addEventListener(\"click\", removePopupHandler, { capture: true });\n}\n\nexport async function makeUpdate(id) {\n  let customer = {\n    customer_id: id,\n    name: document.querySelector(\"#name-\" + id).value,\n    email: document.querySelector(\"#email-\" + id).value,\n    town: document.querySelector(\"#town-\" + id).value,\n    country: document.querySelector(\"#country-\" + id).value,\n  };\n\n  let response = await updateUser(customer);\n  console.log(response.data);\n}\n\nexport function remove(id) {\n  document.querySelector(\"#popup-\" + id).remove();\n  window.removeEventListener(\"click\", removePopupHandler);\n}\n\nexport function removePopupHandler(event) {\n  console.log(\"Window clicked\");\n  let currentPopup = document.querySelector(\".popup-body\");\n  if (currentPopup) {\n    if (!currentPopup.contains(event.target)) {\n      let id = currentPopup.id.split(\"-\")[1];\n      remove(id);\n    }\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"bdeed2e79b47469a222b930041261e78","cacheData":{"env":{}}}